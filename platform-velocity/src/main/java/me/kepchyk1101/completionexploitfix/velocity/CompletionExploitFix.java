package me.kepchyk1101.completionexploitfix.velocity;

import com.google.inject.Inject;
import com.velocitypowered.api.event.Subscribe;
import com.velocitypowered.api.event.proxy.ProxyInitializeEvent;
import com.velocitypowered.api.event.proxy.ProxyShutdownEvent;
import com.velocitypowered.api.plugin.Dependency;
import com.velocitypowered.api.plugin.Plugin;
import dev.simplix.protocolize.api.Protocolize;
import lombok.AccessLevel;
import lombok.RequiredArgsConstructor;
import lombok.experimental.FieldDefaults;
import me.kepchyk1101.completionexploitfix.commons.ProjectConstants;
import me.kepchyk1101.completionexploitfix.velocity.listener.TabCompleteListener;
import org.bstats.velocity.Metrics;
import org.jetbrains.annotations.NotNull;

import java.util.logging.Logger;

@Plugin(
        id = "completionexploitfix",
        name = "CompletionExploitFix",
        version = "1.0.1",
        authors = {"Kepchyk1101"},
        dependencies = {
                @Dependency(id = "protocolize")
        }
)
@RequiredArgsConstructor(onConstructor_ = {@Inject})
@FieldDefaults(level = AccessLevel.PRIVATE, makeFinal = true)
public class CompletionExploitFix {

    @NotNull Logger logger;
    @NotNull Metrics.Factory metricsFactory;

    @Subscribe
    public void onProxyInit(ProxyInitializeEvent event) {

        Protocolize.listenerProvider().registerListener(new TabCompleteListener());

        metricsFactory.make(this, ProjectConstants.SPIGOTMC_PLUGIN_ID);

        logger.info("Plugin enabled!");

    }

    @Subscribe
    public void onProxyShutdown(ProxyShutdownEvent event) {
        logger.info("Plugin disabled!");
    }

}
